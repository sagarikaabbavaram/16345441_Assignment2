# -*- coding: utf-8 -*-
"""16345441_Assignment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16S8fVu5uUS-8PVXSZGjjB7TkCpSm92BS
"""

import pandas as pd

data=pd.read_csv("/content/sample_data/rawdata.csv")

data.head()

#Check for null values

data.isna().sum()

data2 = pd.DataFrame(data)

# (b) Removed the units from Mileage, Engine, Power and New_Price and converted them into float

data2['Mileage'] = data2['Mileage'].str.extract('(\d+\.\d+)').astype(float)

data2['Engine'] = data2['Engine'].str.replace(' CC', '').astype(float)

data2['Power'] = data2['Power'].str.extract('(\d+\.\d+)').astype(float)

data2['New_Price'] = data2['New_Price'].str.extract('(\d+\.\d+)').astype(float)

# (a)
#Replace the NA values of Mileage, Engine and Power with median
#Median is the best replacement technique because it preserves the central tendency and avoids outliers
#Replace the NA values of Seat with Mode. Number of seats is discrete in nature, although it is quantitative value so mode is used
#As there are many null values incase of Newprice, it is better to drop a column because imputing any values can result in outliers in the data and lead to wrong analysis

data2['Mileage'].fillna(data2['Mileage'].median(),inplace=True)
data2['Engine'].fillna(data2['Engine'].median(),inplace=True)
data2['Power'].fillna(data2['Power'].median(),inplace=True)

data2['Seats'].fillna(data2['Seats'].mode()[0],inplace=True)

data2.drop('New_Price', axis=1, inplace=True)#axis=1 indicates to drop a column

output_csv_file = '/content/sample_data/cleaned_data.csv'
data2.to_csv(output_csv_file, index=False)

data1=pd.read_csv("/content/sample_data/cleaned_data.csv")

data1.isna().sum()

#Check the unique values of Categorical variables: Fuel_Type, Transmission, Owner_Type

data1['Fuel_Type'].unique()

data1['Transmission'].unique()

data1['Owner_Type'].unique()

# (c) Convert the above categorical variables to numerical using one hot encoding
data1['Fuel_Type'].replace({'Diesel': 0, 'Petrol': 1, 'Electric': 2}, inplace=True)
data1['Transmission'].replace({'Manual': 0, 'Automatic': 1}, inplace=True)
data1['Owner_Type'].replace({'First': 1, 'Second': 2, 'Third': 3, 'Fourth & Above': 4}, inplace=True)

data1.head()

#Save the encoded data in separate csv file

output_csv_file = 'C:\\Users\\kulka\\Documents\\PDS\\PdsAssignment\\Results\\encoded_data.csv'
data1.to_csv(output_csv_file, index=False)

# (d) Add the new column CURRENT AGE OF THE CAR

from datetime import datetime

current_year = datetime.now().year

data1['Current_Age'] = current_year - data1['Year']

#Save the file with newly added Current_Age colmun in separate file
output_csv_file = '/content/sample_data/result.csv'
data1.to_csv(output_csv_file, index=False)

data3=pd.read_csv("/content/sample_data/result.csv")
data3.head()

